[{"C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\styles\\global.ts":"1","C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\styles.ts":"2","C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\index.tsx":"3","C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\index.tsx":"4","C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\styles.ts":"5"},{"size":586,"mtime":1722342016291,"results":"6","hashOfConfig":"7"},{"size":1641,"mtime":1722358822810,"results":"8","hashOfConfig":"7"},{"size":4038,"mtime":1722359143224,"results":"9","hashOfConfig":"7"},{"size":5248,"mtime":1722359665178,"results":"10","hashOfConfig":"7"},{"size":3827,"mtime":1722359719160,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kgh73z",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\styles\\global.ts",[],"C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\styles.ts",[],"C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\index.tsx",[],"C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\index.tsx",["23"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport { HourContainer, Container, Header, WorkTime, Button, History, Pagination, Select, BankOfHours } from './styles';\r\n\r\ninterface IWorkTime {\r\n  hours: string;\r\n  minutes: string;\r\n  trabalhando: boolean;\r\n}\r\n\r\ninterface IHistoryItem {\r\n  id: string;\r\n  date: string;\r\n  hours: number;\r\n  minutes: number;\r\n}\r\n\r\n/* interface IBankOfHours {\r\n  balance: string;\r\n} */\r\n\r\nconst Pontos: React.FC = () => {\r\n  const [workTime, setWorkTime] = useState<IWorkTime | null>(null);\r\n  const [historyItems, setHistoryItems] = useState<IHistoryItem[]>([]);\r\n  const [bankOfHours, setBankOfHours] = useState<string>('');\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const userCode = localStorage.getItem('session');\r\n  const history = useHistory();\r\n  const day_hour = 8;\r\n\r\n  useEffect(() => {\r\n    if (!userCode) {\r\n      history.push('/');\r\n    } else {\r\n      fetchWorkTime();\r\n      fetchHistory(page, itemsPerPage);\r\n      fetchBankOfHours();\r\n    }\r\n  }, [userCode, history, page, itemsPerPage]);\r\n\r\n  const fetchWorkTime = async () => {\r\n    if (userCode) {\r\n      try {\r\n        const response = await api.get(`/points/today/${userCode}`);\r\n        setWorkTime(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar horas de trabalho:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchHistory = async (page: number, perPage: number) => {\r\n    if (userCode) {\r\n      try {\r\n        const response = await api.get(`/points/history/${userCode}/paginated`, {\r\n          params: { page, per_page: perPage }\r\n        });\r\n        setHistoryItems(response.data.data);\r\n        setTotalPages(response.data.total_pages);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar histórico:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchBankOfHours = async () => {\r\n    if (userCode) {\r\n      try {\r\n        console.log(`Fetching bank of hours for user_code: ${userCode}`); \r\n        const response = await api.get('/bancodehoras', {\r\n          params: { user_code: userCode, daily_hours: `0${day_hour}:00` }\r\n        });\r\n        console.log('Bank of hours response:', response.data);  \r\n        setBankOfHours(response.data.balance);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar banco de horas:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async () => {\r\n    if (userCode) {\r\n      try {\r\n        await api.post('/points', { user_code: userCode });\r\n        await fetchWorkTime();\r\n        await fetchHistory(page, itemsPerPage);\r\n        await fetchBankOfHours();\r\n      } catch (error) {\r\n        console.error('Erro ao registrar a hora:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleItemsPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setItemsPerPage(Number(event.target.value));\r\n    setPage(1);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('session');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <HourContainer>\r\n        <Header>\r\n          <div className='headerMain'>\r\n            <h1>Relógio de ponto</h1>\r\n            <div className='menu'>\r\n              <div>\r\n                <div className='userCode'>#{userCode}</div>\r\n                <div className='userName'>Usuário</div>\r\n              </div>\r\n              <button className='sair' onClick={handleLogout}>sair</button>\r\n            </div>\r\n          </div>\r\n        </Header>\r\n        <WorkTime>\r\n          <h2>{workTime ? `${workTime.hours}h ${workTime.minutes}m` : '0h 0m'}</h2>\r\n          <p>Horas de hoje</p>\r\n        </WorkTime>\r\n        <Button onClick={handleButtonClick}>\r\n          {workTime?.trabalhando ? 'Hora de saída' : 'Hora de entrada'}\r\n        </Button>\r\n        <BankOfHours>\r\n          <h3>Banco de Horas - jornada de {day_hour} horas diárias</h3>\r\n          <p>Seu saldo de horas: {bankOfHours || '0h 0m'}</p>\r\n        </BankOfHours>\r\n        <History>\r\n          <h3>Dias anteriores</h3>\r\n          {historyItems.map(item => (\r\n            <div key={item.id}>\r\n              <span className='dateHistory'>{item.date}</span>\r\n              <span className='timeHistory'>{item.hours}h {item.minutes}m</span>\r\n            </div>\r\n          ))}\r\n        </History>\r\n        <Pagination>\r\n          <Select value={itemsPerPage} onChange={handleItemsPerPageChange}>\r\n            <option value={5}>5</option>\r\n            <option value={10}>10</option>\r\n            <option value={15}>15</option>\r\n            <option value={20}>20</option>\r\n          </Select>\r\n          {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => (\r\n            <button\r\n              key={pageNumber}\r\n              onClick={() => handlePageChange(pageNumber)}\r\n              disabled={pageNumber === page}\r\n            >\r\n              {pageNumber}\r\n            </button>\r\n          ))}\r\n        </Pagination>\r\n      </HourContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Pontos;\r\n","C:\\Users\\gabriel\\Desktop\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\styles.ts",[],{"ruleId":"24","severity":1,"message":"25","line":42,"column":6,"nodeType":"26","endLine":42,"endColumn":45,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchBankOfHours', 'fetchHistory', and 'fetchWorkTime'. Either include them or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [userCode, history, page, itemsPerPage, fetchWorkTime, fetchHistory, fetchBankOfHours]",{"range":"31","text":"32"},[1198,1237],"[userCode, history, page, itemsPerPage, fetchWorkTime, fetchHistory, fetchBankOfHours]"]