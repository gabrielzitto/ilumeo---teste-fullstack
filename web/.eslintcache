[{"C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\case-full-stack-developer\\web\\src\\pages\\Pontos\\index.tsx":"1","C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\index.tsx":"2","C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\styles.ts":"3","C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\index.tsx":"4","C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\styles.ts":"5"},{"size":3837,"mtime":1722305002817,"results":"6","hashOfConfig":"7"},{"size":3949,"mtime":1722310490187,"results":"8","hashOfConfig":"9"},{"size":3311,"mtime":1722309771587,"results":"10","hashOfConfig":"9"},{"size":1766,"mtime":1722311271950,"results":"11","hashOfConfig":"9"},{"size":1405,"mtime":1722311276386,"results":"12","hashOfConfig":"9"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11zb3qw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"1vtjlfi",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\case-full-stack-developer\\web\\src\\pages\\Pontos\\index.tsx",["24"],"C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\index.tsx",["25"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { HourContainer, Container, Header, WorkTime, Button, History, Pagination, Select } from './styles';\n\ninterface IWorkTime {\n  hours: string;\n  minutes: string;\n  trabalhando: boolean;\n}\n\ninterface IHistoryItem {\n  id: string;\n  date: string;\n  hours: number;\n  minutes: number;\n}\n\nconst Pontos: React.FC = () => {\n  const [workTime, setWorkTime] = useState<IWorkTime | null>(null);\n  const [historyItems, setHistoryItems] = useState<IHistoryItem[]>([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const userCode = localStorage.getItem('session');\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!userCode) {\n      history.push('/');\n    } else {\n      fetchWorkTime();\n      fetchHistory(page, itemsPerPage);\n    }\n  }, [userCode, history, page, itemsPerPage]);\n\n  const fetchWorkTime = async () => {\n    if (userCode) {\n      const response = await api.get(`/points/today/${userCode}`);\n      setWorkTime(response.data);\n    }\n  };\n\n  const fetchHistory = async (page: number, perPage: number) => {\n    if (userCode) {\n      const response = await api.get(`/points/history/${userCode}/paginated`, {\n        params: { page, per_page: perPage }\n      });\n      setHistoryItems(response.data.data);\n      setTotalPages(response.data.total_pages);\n    }\n  };\n\n  const handleButtonClick = async () => {\n    if (userCode) {\n      try {\n        await api.post('/points', { user_code: userCode });\n        await fetchWorkTime();\n        await fetchHistory(page, itemsPerPage);\n      } catch (error) {\n        console.error('Erro ao registrar a hora:', error);\n      }\n    }\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleItemsPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setPage(1);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('session');\n    history.push('/');\n  };\n\n  return (\n    <Container>\n      <HourContainer>\n        <Header>\n          <div className='headerMain'>\n            <h1>Relógio de ponto</h1>\n            <div className='menu'>\n              <button className='sair' onClick={handleLogout}>sair</button>\n              <div>\n                <div className='userCode'>#{userCode}</div>\n                <div className='userName'>Usuário</div>\n              </div>\n            </div>\n          </div>\n        </Header>\n        <WorkTime>\n          <h2>{workTime ? `${workTime.hours}h ${workTime.minutes}m` : '0h 0m'}</h2>\n          <p>Horas de hoje</p>\n        </WorkTime>\n        <Button onClick={handleButtonClick}>\n          {workTime?.trabalhando ? 'Hora de saída' : 'Hora de entrada'}\n        </Button>\n        <History>\n          <h3>Dias anteriores</h3>\n          {historyItems.map(item => (\n            <div key={item.id}>\n              <span className='dateHistory'>{item.date}</span>\n              <span className='timeHistory'>{item.hours}h {item.minutes}m</span>\n            </div>\n          ))}\n        </History>\n        <Pagination>\n          <Select value={itemsPerPage} onChange={handleItemsPerPageChange}>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={15}>15</option>\n            <option value={20}>20</option>\n          </Select>\n          {Array.from({ length: totalPages }, (_, index) => index + 1).map(pageNumber => (\n            <button\n              key={pageNumber}\n              onClick={() => handlePageChange(pageNumber)}\n              disabled={pageNumber === page}\n            >\n              {pageNumber}\n            </button>\n          ))}\n        </Pagination>\n      </HourContainer>\n    </Container>\n  );\n};\n\nexport default Pontos;\n","C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Pontos\\styles.ts",[],"C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\index.tsx",[],"C:\\Users\\gabzi\\OneDrive\\Documentos\\react_node\\ilumeo---teste-fullstack\\web\\src\\pages\\Login\\styles.ts",[],{"ruleId":"26","severity":1,"message":"27","line":35,"column":6,"nodeType":"28","endLine":35,"endColumn":45,"suggestions":"29"},{"ruleId":"26","severity":1,"message":"27","line":35,"column":6,"nodeType":"28","endLine":35,"endColumn":45,"suggestions":"30"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchHistory' and 'fetchWorkTime'. Either include them or remove the dependency array.","ArrayExpression",["31"],["32"],{"desc":"33","fix":"34"},{"desc":"33","fix":"35"},"Update the dependencies array to be: [userCode, history, page, itemsPerPage, fetchWorkTime, fetchHistory]",{"range":"36","text":"37"},{"range":"38","text":"37"},[1015,1054],"[userCode, history, page, itemsPerPage, fetchWorkTime, fetchHistory]",[981,1020]]